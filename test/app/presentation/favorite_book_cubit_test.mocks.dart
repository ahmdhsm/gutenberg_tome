// Mocks generated by Mockito 5.4.4 from annotations
// in gutenberg_tome/test/app/presentation/favorite_book_cubit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:fpdart/fpdart.dart' as _i5;
import 'package:gutenberg_tome/app/data/datasources/favorite_book_local_data_source.dart'
    as _i2;
import 'package:gutenberg_tome/app/domain/entities/book_entity.dart' as _i7;
import 'package:gutenberg_tome/app/domain/repositories/favorite_book_repository.dart'
    as _i3;
import 'package:gutenberg_tome/core/model/failure.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFavoriteBookLocalDataSource_0 extends _i1.SmartFake
    implements _i2.FavoriteBookLocalDataSource {
  _FakeFavoriteBookLocalDataSource_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [FavoriteBookRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockFavoriteBookRepository extends _i1.Mock
    implements _i3.FavoriteBookRepository {
  MockFavoriteBookRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.FavoriteBookLocalDataSource get localDataSource => (super.noSuchMethod(
        Invocation.getter(#localDataSource),
        returnValue: _FakeFavoriteBookLocalDataSource_0(
          this,
          Invocation.getter(#localDataSource),
        ),
      ) as _i2.FavoriteBookLocalDataSource);

  @override
  _i4.Future<_i5.Either<_i6.Failure, int>> addToFavorite(
          {required _i7.BookEntity? book}) =>
      (super.noSuchMethod(
        Invocation.method(
          #addToFavorite,
          [],
          {#book: book},
        ),
        returnValue: _i4.Future<_i5.Either<_i6.Failure, int>>.value(
            _i8.dummyValue<_i5.Either<_i6.Failure, int>>(
          this,
          Invocation.method(
            #addToFavorite,
            [],
            {#book: book},
          ),
        )),
      ) as _i4.Future<_i5.Either<_i6.Failure, int>>);

  @override
  _i4.Future<_i5.Either<_i6.Failure, List<_i7.BookEntity>>> getAllFavorite() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllFavorite,
          [],
        ),
        returnValue:
            _i4.Future<_i5.Either<_i6.Failure, List<_i7.BookEntity>>>.value(
                _i8.dummyValue<_i5.Either<_i6.Failure, List<_i7.BookEntity>>>(
          this,
          Invocation.method(
            #getAllFavorite,
            [],
          ),
        )),
      ) as _i4.Future<_i5.Either<_i6.Failure, List<_i7.BookEntity>>>);

  @override
  _i4.Future<_i5.Either<_i6.Failure, int>> removeFromFavorite(
          {required int? id}) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeFromFavorite,
          [],
          {#id: id},
        ),
        returnValue: _i4.Future<_i5.Either<_i6.Failure, int>>.value(
            _i8.dummyValue<_i5.Either<_i6.Failure, int>>(
          this,
          Invocation.method(
            #removeFromFavorite,
            [],
            {#id: id},
          ),
        )),
      ) as _i4.Future<_i5.Either<_i6.Failure, int>>);
}
