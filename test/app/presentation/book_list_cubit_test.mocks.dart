// Mocks generated by Mockito 5.4.4 from annotations
// in gutenberg_tome/test/app/presentation/book_list_cubit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:fpdart/fpdart.dart' as _i6;
import 'package:gutenberg_tome/app/data/datasources/book_local_data_source.dart'
    as _i3;
import 'package:gutenberg_tome/app/data/datasources/book_remote_data_source.dart'
    as _i2;
import 'package:gutenberg_tome/app/domain/entities/api_response_entity.dart'
    as _i8;
import 'package:gutenberg_tome/app/domain/repositories/book_repository.dart'
    as _i4;
import 'package:gutenberg_tome/core/model/failure.dart' as _i7;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i9;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeBookRemoteDataSource_0 extends _i1.SmartFake
    implements _i2.BookRemoteDataSource {
  _FakeBookRemoteDataSource_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBookLocalDataSource_1 extends _i1.SmartFake
    implements _i3.BookLocalDataSource {
  _FakeBookLocalDataSource_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [BookRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockBookRepository extends _i1.Mock implements _i4.BookRepository {
  MockBookRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.BookRemoteDataSource get remoteDataSource => (super.noSuchMethod(
        Invocation.getter(#remoteDataSource),
        returnValue: _FakeBookRemoteDataSource_0(
          this,
          Invocation.getter(#remoteDataSource),
        ),
      ) as _i2.BookRemoteDataSource);

  @override
  _i3.BookLocalDataSource get localDataSource => (super.noSuchMethod(
        Invocation.getter(#localDataSource),
        returnValue: _FakeBookLocalDataSource_1(
          this,
          Invocation.getter(#localDataSource),
        ),
      ) as _i3.BookLocalDataSource);

  @override
  _i5.Future<_i6.Either<_i7.Failure, _i8.ApiResponseEntity>> getOnlineData(
          {required String? searchQuery}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getOnlineData,
          [],
          {#searchQuery: searchQuery},
        ),
        returnValue:
            _i5.Future<_i6.Either<_i7.Failure, _i8.ApiResponseEntity>>.value(
                _i9.dummyValue<_i6.Either<_i7.Failure, _i8.ApiResponseEntity>>(
          this,
          Invocation.method(
            #getOnlineData,
            [],
            {#searchQuery: searchQuery},
          ),
        )),
      ) as _i5.Future<_i6.Either<_i7.Failure, _i8.ApiResponseEntity>>);

  @override
  _i5.Future<_i6.Either<_i7.Failure, _i8.ApiResponseEntity>> loadMoreData(
          {required String? nextUrl}) =>
      (super.noSuchMethod(
        Invocation.method(
          #loadMoreData,
          [],
          {#nextUrl: nextUrl},
        ),
        returnValue:
            _i5.Future<_i6.Either<_i7.Failure, _i8.ApiResponseEntity>>.value(
                _i9.dummyValue<_i6.Either<_i7.Failure, _i8.ApiResponseEntity>>(
          this,
          Invocation.method(
            #loadMoreData,
            [],
            {#nextUrl: nextUrl},
          ),
        )),
      ) as _i5.Future<_i6.Either<_i7.Failure, _i8.ApiResponseEntity>>);

  @override
  _i5.Future<_i6.Either<_i7.Failure, _i8.ApiResponseEntity>> getOfflineData() =>
      (super.noSuchMethod(
        Invocation.method(
          #getOfflineData,
          [],
        ),
        returnValue:
            _i5.Future<_i6.Either<_i7.Failure, _i8.ApiResponseEntity>>.value(
                _i9.dummyValue<_i6.Either<_i7.Failure, _i8.ApiResponseEntity>>(
          this,
          Invocation.method(
            #getOfflineData,
            [],
          ),
        )),
      ) as _i5.Future<_i6.Either<_i7.Failure, _i8.ApiResponseEntity>>);
}
