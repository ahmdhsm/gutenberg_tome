// Mocks generated by Mockito 5.4.4 from annotations
// in gutenberg_tome/test/app/domain/repositories/favorite_book_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:fpdart/fpdart.dart' as _i5;
import 'package:gutenberg_tome/app/data/datasources/favorite_book_local_data_source.dart'
    as _i3;
import 'package:gutenberg_tome/app/data/model/book_model.dart' as _i7;
import 'package:gutenberg_tome/core/model/failure.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i8;
import 'package:realm/realm.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeRealm_0 extends _i1.SmartFake implements _i2.Realm {
  _FakeRealm_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [FavoriteBookLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockFavoriteBookLocalDataSource extends _i1.Mock
    implements _i3.FavoriteBookLocalDataSource {
  MockFavoriteBookLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Realm get realm => (super.noSuchMethod(
        Invocation.getter(#realm),
        returnValue: _FakeRealm_0(
          this,
          Invocation.getter(#realm),
        ),
      ) as _i2.Realm);

  @override
  _i4.Future<_i5.Either<_i6.Failure, int>> addFavorite(
          {required _i7.BookModel? book}) =>
      (super.noSuchMethod(
        Invocation.method(
          #addFavorite,
          [],
          {#book: book},
        ),
        returnValue: _i4.Future<_i5.Either<_i6.Failure, int>>.value(
            _i8.dummyValue<_i5.Either<_i6.Failure, int>>(
          this,
          Invocation.method(
            #addFavorite,
            [],
            {#book: book},
          ),
        )),
      ) as _i4.Future<_i5.Either<_i6.Failure, int>>);

  @override
  _i4.Future<_i5.Either<_i6.Failure, int>> removeFavorite({required int? id}) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeFavorite,
          [],
          {#id: id},
        ),
        returnValue: _i4.Future<_i5.Either<_i6.Failure, int>>.value(
            _i8.dummyValue<_i5.Either<_i6.Failure, int>>(
          this,
          Invocation.method(
            #removeFavorite,
            [],
            {#id: id},
          ),
        )),
      ) as _i4.Future<_i5.Either<_i6.Failure, int>>);

  @override
  _i4.Future<_i5.Either<_i6.Failure, List<_i7.BookModel>>> getFavorite() =>
      (super.noSuchMethod(
        Invocation.method(
          #getFavorite,
          [],
        ),
        returnValue:
            _i4.Future<_i5.Either<_i6.Failure, List<_i7.BookModel>>>.value(
                _i8.dummyValue<_i5.Either<_i6.Failure, List<_i7.BookModel>>>(
          this,
          Invocation.method(
            #getFavorite,
            [],
          ),
        )),
      ) as _i4.Future<_i5.Either<_i6.Failure, List<_i7.BookModel>>>);
}
